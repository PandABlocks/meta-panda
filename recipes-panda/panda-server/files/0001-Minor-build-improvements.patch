From 8698a7e8f137427f7146f737d3582f2a380351af Mon Sep 17 00:00:00 2001
From: Emilio Perez <emiliopeju@gmail.com>
Date: Thu, 19 Jun 2025 13:43:36 +0100
Subject: [PATCH] Minor build improvements

- Minimal changes to support yocto build without needing patches
---
 Makefile                 | 13 ++++++++++---
 server/Makefile          |  2 +-
 server/check_global_vars | 36 ++++++++++++++++++++++++++++++++++++
 server/global_vars       | 17 +++++++++++++++++
 4 files changed, 64 insertions(+), 4 deletions(-)
 create mode 100755 server/check_global_vars
 create mode 100644 server/global_vars

diff --git a/Makefile b/Makefile
index a4d4cca..507c7b8 100644
--- a/Makefile
+++ b/Makefile
@@ -28,8 +28,10 @@ ARCH = $(ARCH_$(PLATFORM))
 # Cross-compilation tuple for toolkit
 COMPILER_PREFIX_zynq = arm-none-linux-gnueabihf
 COMPILER_PREFIX_zynqmp = aarch64-none-linux-gnu
-CROSS_COMPILE = $(COMPILER_PREFIX)-
+CROSS_COMPILE ?= $(COMPILER_PREFIX)-
+ifneq ($(CROSS_COMPILE),)
 CC = $(CROSS_COMPILE)gcc
+endif
 
 DRIVER_BUILD_DIR = $(BUILD_DIR)/driver
 SERVER_BUILD_DIR = $(BUILD_DIR)/server
@@ -80,6 +82,11 @@ $(PANDA_KO): $(DRIVER_BUILD_DIR) $(DRIVER_BUILD_FILES) $(DRIVER_HEADER)
 driver: $(PANDA_KO)
 .PHONY: driver
 
+modules_install: $(DRIVER_BUILD_DIR)
+	CFLAGS_EXTRA=$(CFLAGS_EXTRA) $(MAKE) -C $(KERNEL_SRC) M="$<" modules_install \
+            ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE)
+
+.PHONY: modules_install
 
 # ------------------------------------------------------------------------------
 # Socket server
@@ -98,7 +105,7 @@ MAKE_SERVER_TARGET = \
     $(MAKE) -C $< -f $(TOP)/server/Makefile $(SERVER_BUILD_ENV)
 
 $(SERVER): $(SERVER_BUILD_DIR) $(SERVER_FILES)
-	$(MAKE_SERVER_TARGET) CC=$(CC)
+	$(MAKE_SERVER_TARGET) CC="$(CC)"
 
 # Two differences with building sim_server: we use the native compiler, not the
 # cross-compiler, and we only build the sim_server target.
@@ -106,7 +113,7 @@ $(SIM_SERVER): $(SIM_SERVER_BUILD_DIR) $(SERVER_FILES)
 	$(MAKE_SERVER_TARGET) sim_server
 
 $(SLOW_LOAD): $(SERVER_BUILD_DIR) server/slow_load.c
-	$(MAKE_SERVER_TARGET) CC=$(CC) slow_load
+	$(MAKE_SERVER_TARGET) CC="$(CC)" slow_load
 
 
 # Construction of simserver launch script.
diff --git a/server/Makefile b/server/Makefile
index 0af5d78..4b65494 100644
--- a/server/Makefile
+++ b/server/Makefile
@@ -104,7 +104,7 @@ FORCE:
 
 
 server: $(SRCS:.c=.o) hw_hardware.o
-	! nm $^ | grep ' [CD] '
+	$(TOP)/server/check_global_vars $(TOP)/server/global_vars .
 	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@
 
 sim_server: $(SRCS:.c=.o) sw_hardware.o sim_hardware.o
diff --git a/server/check_global_vars b/server/check_global_vars
new file mode 100755
index 0000000..fefa485
--- /dev/null
+++ b/server/check_global_vars
@@ -0,0 +1,36 @@
+#!/bin/bash
+#
+# Author: Michael Abbott
+#
+# This script checks for unexpected global variables, and should be called this:
+#
+#   ./check_global_vars global-vars object-dir
+#
+# where global-vars is a file containing a list of permitted global variables,
+# and object-dir is the object directory to check.
+
+vars_file="${1:?Must specify list of allowed variables}"
+object_dir="${2:?Must specify directory to check}"
+
+vars="$(sed '/^#/d;/^$/d' "$vars_file")"
+
+sep=
+pattern=
+for var in $vars; do
+    pattern="$pattern$sep$var"
+    sep='|'
+done
+
+# List all the global variables using nm, filter out only C ("common" or
+# uninitialised data) and D (initialised data) entries, and filter out the
+# documented expected variables.
+extra_vars="$(
+    nm "$object_dir"/*.o |
+    grep ' [DC] ' |
+    cut -d ' ' -f 3- |
+    grep -v -E "^($pattern)$")"
+
+if [[ -n $extra_vars ]]; then
+    echo >&2 Unexpected global variables seen: $extra_vars
+    exit 1
+fi
diff --git a/server/global_vars b/server/global_vars
new file mode 100644
index 0000000..b40aae8
--- /dev/null
+++ b/server/global_vars
@@ -0,0 +1,17 @@
+# Class methods defined in different files and used in fields.c
+param_class_methods
+read_class_methods
+write_class_methods
+time_class_methods
+bit_out_class_methods
+pos_out_class_methods
+ext_out_class_methods
+bit_mux_class_methods
+pos_mux_class_methods
+table_class_methods
+# Types
+enum_type_methods
+time_type_methods
+# Commands
+entity_commands
+system_commands
-- 
2.47.2

